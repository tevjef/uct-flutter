ext {
  compileSdkVersion = 27
  targetSdkVersion = 27

  if (System.getenv("BITRISE_BUILD_NUMBER") != null) {
    buildVersion = System.getenv("BITRISE_BUILD_NUMBER").toInteger()
  } else {
    buildVersion = 136
  }
}

buildscript {
  repositories {
    google()
    jcenter()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.2.0'
    classpath 'com.google.gms:google-services:4.2.0'
  }
}

allprojects {
  repositories {
    google()
    jcenter()
  }
}

allprojects {
  subprojects {
    project.configurations.all {
      resolutionStrategy {
        force 'com.google.firebase:firebase-auth:16.1.0'
        force 'com.google.firebase:firebase-core:16.0.7'
        force 'com.google.firebase:firebase-messaging:17.3.4'
        force 'com.google.firebase:firebase-ads:17.1.3'
      }
    }
  }
}

rootProject.buildDir = '../build'
subprojects {
  project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
  project.evaluationDependsOn(':app')
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

//project.afterEvaluate {
//  tasks.getByPath(':app:assembleRelease').doLast {
//    def src
//    if(project.hasProperty('target-platform') &&
//            project.property('target-platform') == 'android-arm64') {
//      // If we are building the 64bit then we also want to add the 32bit libflutter.so
//      src = "$flutterRoot/bin/cache/artifacts/engine/android-arm-release/flutter.jar"
//    }else{
//      // If we are building the opposite (32bit), we include the 64bit libflutter.so
//      src = "$flutterRoot/bin/cache/artifacts/engine/android-arm64-release/flutter.jar"
//    }
//    copy {
//      from zipTree(src)
//      include 'lib/*/libflutter.so'
//      into "src/main/jniLibs/"
//      eachFile {
//        it.path = it.path.replaceFirst("lib/", "")
//      }
//    }
//  }
//}